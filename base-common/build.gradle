apply plugin: 'com.android.library'
apply plugin: 'com.jakewharton.butterknife'
android {
    buildToolsVersion rootProject.ext.buildToolsVersion
    compileSdkVersion rootProject.ext.compileSdkVersion


    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        resourcePrefix "base_common_"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
//        需要使用arouter的地方才需要配置annotationProcessor，base-common组件没有可以跳转进来的页面，无需配置

            //ARouter配置
            javaCompileOptions {
                annotationProcessorOptions {
                    arguments = [moduleName: project.getName()]
                    includeCompileClasspath true
                }
            }

        lintOptions {
            abortOnError false
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    testCompile 'junit:junit:4.12'
    //implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "com.android.support:appcompat-v7:${rootProject.supportLibraryVersion}"
    implementation "com.android.support:design:${rootProject.supportLibraryVersion}"
    implementation "com.android.support.constraint:constraint-layout:${rootProject.constraintVersion}"
    //    butterknife
    api "com.jakewharton:butterknife:${rootProject.ext.butterKnifeVersion}"
    annotationProcessor "com.jakewharton:butterknife-compiler:${rootProject.ext.butterKnifeCompilerVersion}"
    //    loadSir
    api "com.kingja.loadsir:loadsir:${rootProject.ext.loadSirVersion}"
    //    ARouter
    annotationProcessor "com.alibaba:arouter-compiler:${rootProject.ext.arouterAnnotationProcessor}"
    //    Rx系列
    api "io.reactivex.rxjava2:rxandroid:${rootProject.ext.rxAndroidVersion}"
    api "io.reactivex.rxjava2:rxjava:${rootProject.ext.rxJavaVersion}"
    //    okhttp3 + retrofit2 + gson-converter 网速太慢，我选择了引入了jar包
    //    api "com.squareup.okhttp3:okhttp:${rootProject.ext.okhttpVersion}"
    //    api "com.squareup.retrofit2:retrofit:${rootProject.ext.retrofitVersion}"
    //    api "com.squareup.retrofit2:adapter-rxjava2:${rootProject.ext.retrofit2RxjavaVersion}"
    //    api "com.squareup.retrofit2:converter-gson:${rootProject.ext.gsonConvertVersion}"
    api project(':core-framework')
    api project(':core-ui')
    api project(':core-router')
    api project(':core-log')
    api files('libs/adapter-rxjava2-2.4.0.jar')
    api files('libs/converter-gson-2.4.0.jar')
    api files('libs/okhttp-3.11.0.jar')
    api files('libs/retrofit-2.4.0.jar')
    api files('libs/okio-1.15.0.jar')
    api files('libs/logging-interceptor-3.11.0.jar')
    //    core-processor中也依赖了gson
    implementation "com.google.code.gson:gson:${rootProject.gsonVersion}"
//livedata
    api "android.arch.lifecycle:livedata:${rootProject.ext.liveDataVersion}"
//    google easyPermission
    api "pub.devrel:easypermissions:${rootProject.ext.easyPermissionVersion}"
//    vlayout
    api ('com.alibaba.android:vlayout:1.3.0'){
        transitive = true
    }
    api "com.android.support:recyclerview-v7:${rootProject.ext.supportLibraryVersion}"

//    沉浸式状态栏
    api "com.gyf.immersionbar:immersionbar:${rootProject.ext.immersionBarVersion}"

}
