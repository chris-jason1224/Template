apply plugin: 'com.android.application'
//沪江 aspectJ插件
apply plugin: 'android-aspectjx'

android {
    signingConfigs {
        signature {
            keyAlias 'Template'
            keyPassword 'admin123456'
            storeFile file('../Template.jks')
            storePassword 'admin123456'
        }
    }
    buildToolsVersion rootProject.ext.buildToolsVersion
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "com.cj.mst"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        lintOptions {
            abortOnError false
        }


        //multidex config
        multiDexEnabled true

        //极光推送配置
        manifestPlaceholders = [
                JPUSH_PKGNAME : "${applicationId}",
                JPUSH_APPKEY  : "ebc918c62b95b99795db7fab", //JPush 上注册的包名对应的 Appkey.
                JPUSH_CHANNEL : "Template-debug-channel", //暂时填写默认值即可.
                GAO_DE_MAP_KEY: "89be9f853395b8c3ee9f9241ddc9c6c8",//高德地图key
        ]

        ndk {
            //选择要添加的对应 cpu 类型的 .so 库。
            abiFilters 'x86', 'armeabi', 'armeabi-v7a', 'arm64-v8a'
            // 还可以添加 'arm64-v8a' ，'x86', 'x86_64', 'mips', 'mips64'
        }


    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.signature
        }
        debug {
            signingConfig signingConfigs.signature
        }
    }


    //multidex config
    dexOptions {
        javaMaxHeapSize "4g"
        preDexLibraries = false
    }

    //指定编译jdk版本 butterknife 静态接口方法必须在java8下使用
    compileOptions {
        sourceCompatibility rootProject.ext.javaVersion
        targetCompatibility rootProject.ext.javaVersion
    }

}

//因为app模块依赖了fun-business模块，而fun-business模块依赖了支付宝sdk（aar），所以在app模块也需要依赖上路径
repositories {
    flatDir {
        dirs 'libs', '../fun_business/libs', '../fun_lbs/libs'
    }
}

dependencies {
    androidTestImplementation "androidx.test.ext:junit:${rootProject.ext.junitVersion}"
    androidTestImplementation "androidx.test:runner:${rootProject.ext.runnerVersion}"
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "androidx.appcompat:appcompat:${rootProject.ext.appCompatVersion}"
    //合并时才依赖各个组件

    if(!runAloneMode.toBoolean()){
        api project(':biz_main')
        api project(':biz_login')
        api project(':fun_aop')
        api project(':fun_push')
        api project(':fun_business')
        api project(':fun_compressor')
        api project(':fun_bluetooth')
        api project(':fun_lbs')
    }

}

//AspectJX插件配置项
aspectjx {
    enabled true
    //mac系统下，包名分隔用.
    //不去掉支付宝sdk会导致崩溃
    exclude 'com.alipay', 'com.tencent', 'com.jakewharton'

    //windows系统下,包名分隔用/
    //exclude 'com/alipay'

}


