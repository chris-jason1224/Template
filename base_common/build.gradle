apply plugin: 'com.android.library'
apply plugin: 'io.objectbox' //依赖ObjectBox插件

android {
    buildToolsVersion rootProject.ext.buildToolsVersion
    compileSdkVersion rootProject.ext.compileSdkVersion


    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        resourcePrefix "base_common_"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
//        需要使用arouter的地方才需要配置annotationProcessor，base-common组件没有可以跳转进来的页面，无需配置

        //ARouter配置
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
                includeCompileClasspath true
            }
        }

        lintOptions {
            abortOnError false
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    //implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation "androidx.test.ext:junit:${rootProject.ext.junitVersion}"
    androidTestImplementation "androidx.test:runner:${rootProject.ext.runnerVersion}"

    implementation "androidx.appcompat:appcompat:${rootProject.ext.appCompatVersion}"
    implementation "com.google.android.material:material:${rootProject.ext.materialVersion}"
    implementation "androidx.constraintlayout:constraintlayout:${rootProject.ext.constraintVersion}"

    //loadSir
    api "com.kingja.loadsir:loadsir:${rootProject.ext.loadSirVersion}"
    //Rx系列
    api "io.reactivex.rxjava2:rxandroid:${rootProject.ext.rxAndroidVersion}"
    api "io.reactivex.rxjava2:rxjava:${rootProject.ext.rxJavaVersion}"

    api project(':core_framework')
    api project(':core_ui')
    api project(':core_log')
    api project(':core_jutils')
    api files('libs/adapter-rxjava2-2.4.0.jar')
    api files('libs/converter-gson-2.4.0.jar')
    api files('libs/okhttp-3.11.0.jar')
    api files('libs/retrofit-2.4.0.jar')
    api files('libs/okio-1.15.0.jar')
    api files('libs/logging-interceptor-3.11.0.jar')

    //    core-processor中也依赖了gson
    implementation "com.google.code.gson:gson:${rootProject.ext.gsonVersion}"

    //livedata
    api "androidx.lifecycle:lifecycle-livedata:${rootProject.ext.liveDataVersion}"

    //google easyPermission
    api "pub.devrel:easypermissions:${rootProject.ext.easyPermissionVersion}"

    //vlayout
    api("com.alibaba.android:vlayout:${rootProject.ext.vLayoutVersion}") {
        transitive = true
    }

    //RecyclerView
    api "androidx.recyclerview:recyclerview:${rootProject.ext.recyclerViewVersion}"

    //沉浸式状态栏
    api "com.gyf.immersionbar:immersionbar:${rootProject.ext.immersionBarVersion}"

    //MMKV
    api "com.tencent:mmkv:${rootProject.ext.tencentMMKVVersion}"

    // fresco 主框架
    api "com.facebook.fresco:fresco:${rootProject.frescoMainLibVersion}"
    // 支持 GIF 动图
    api "com.facebook.fresco:animated-gif:${rootProject.frescoSupGifVersion}"
    // 支持 WebP动图
    api "com.facebook.fresco:animated-webp:${rootProject.frescoSupWebPAnimationVersion}"
    //支持WebP静态图
    api "com.facebook.fresco:webpsupport:${rootProject.frescoSupWebPVersion}"

    //ARouter
    api "com.alibaba:arouter-api:${rootProject.ext.arouterApiVersion}"
    annotationProcessor "com.alibaba:arouter-compiler:$rootProject.ext.arouterAnnotationProcessor"

    //LiveEventBus
    api "com.jeremyliao:live-event-bus-x:${rootProject.ext.liveDataBusVersion}"

    //butterknife
    api "com.jakewharton:butterknife:${rootProject.ext.butterknifeVersion}"


}
