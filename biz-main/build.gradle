apply plugin: 'com.android.library'
apply plugin: 'com.jakewharton.butterknife'

android {
    buildToolsVersion rootProject.ext.buildToolsVersion
    compileSdkVersion rootProject.ext.compileSdkVersion



    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        resourcePrefix "biz_main_"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        if (!isModuleModle.toBoolean()) {
            //ARouter配置
            javaCompileOptions {
                annotationProcessorOptions {
                    arguments = [moduleName: project.getName()]
                    includeCompileClasspath true
                }
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "com.android.support:appcompat-v7:${rootProject.ext.supportLibraryVersion}"
    implementation project(':base-common')
    if (!isModuleModle.toBoolean()) {
        annotationProcessor "com.alibaba:arouter-compiler:$rootProject.ext.arouterAnnotationProcessor"
    }
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    annotationProcessor "com.jakewharton:butterknife-compiler:${rootProject.ext.butterKnifeCompilerVersion}"
    annotationProcessor project(':core-processor')
    implementation project(':core-annotations')

    //测试分享组件
    implementation project(':func-share-login')

    //测试数据库组件
    //使用数据库组件必须要依赖上,否则assets检索不到组件配置信息
    implementation project(':func-db')

}
